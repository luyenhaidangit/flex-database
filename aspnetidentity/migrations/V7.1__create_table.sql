-- ================================================
-- SCRIPT: V7.1_create_table.sql - 31/05/2025
-- ================================================

-- ================================================
-- USERS
-- ================================================
-- Stores admin user information for ASP.NET Identity
CREATE TABLE USERS (
    ID                    VARCHAR2(256 CHAR) NOT NULL PRIMARY KEY,
    USER_NAME             VARCHAR2(256 CHAR) NOT NULL UNIQUE,
    NORMALIZED_USER_NAME  VARCHAR2(256 CHAR) NOT NULL UNIQUE,
    EMAIL                 VARCHAR2(256 CHAR) NOT NULL UNIQUE,
    NORMALIZED_EMAIL      VARCHAR2(256 CHAR) NOT NULL UNIQUE,
    EMAIL_CONFIRMED       CHAR(1) DEFAULT 'N' CHECK (EMAIL_CONFIRMED IN ('Y', 'N')),
    PASSWORD_HASH         VARCHAR2(256 CHAR) NOT NULL,
    SECURITY_STAMP        VARCHAR2(256 CHAR),
    CONCURRENCY_STAMP     VARCHAR2(256 CHAR),
    PHONE_NUMBER          VARCHAR2(20 CHAR),
    PHONE_NUMBER_CONFIRMED CHAR(1) DEFAULT 'N' CHECK (PHONE_NUMBER_CONFIRMED IN ('Y', 'N')),
    TWO_FACTOR_ENABLED    CHAR(1) DEFAULT 'N' CHECK (TWO_FACTOR_ENABLED IN ('Y', 'N')),
    MFA_SECRET            VARCHAR2(100 CHAR),
    LOCKOUT_END           TIMESTAMP,
    LOCKOUT_ENABLED       CHAR(1) DEFAULT 'Y' CHECK (LOCKOUT_ENABLED IN ('Y', 'N')),
    ACCESS_FAILED_COUNT   NUMBER(10,0) DEFAULT 0,
    FULL_NAME             VARCHAR2(200 CHAR),
    CREATED_AT            TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    LAST_LOGIN            TIMESTAMP,
    IS_ACTIVE             CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y', 'N')),
    CONSTRAINT CHK_EMAIL CHECK (EMAIL LIKE '%@%.%')
);

-- Indexes
CREATE INDEX IX_USERS_NORMALIZED_USER_NAME ON USERS(NORMALIZED_USER_NAME);
CREATE INDEX IX_USERS_NORMALIZED_EMAIL ON USERS(NORMALIZED_EMAIL);

-- ================================================
-- ROLES
-- ================================================
-- Stores role information for RBAC
CREATE TABLE ROLES (
    ID                    NUMBER(19,0) GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    NAME                  VARCHAR2(256 CHAR) NOT NULL UNIQUE,
    NORMALIZED_NAME       VARCHAR2(256 CHAR) UNIQUE,
    CONCURRENCY_STAMP     VARCHAR2(256 CHAR),
    CODE                  VARCHAR2(255 CHAR) NOT NULL UNIQUE,
    DESCRIPTION           VARCHAR2(1000 CHAR) DEFAULT '',
    IS_ACTIVE             CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y', 'N')),
    CREATED_AT            TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    LAST_UPDATED          TIMESTAMP
);

-- Indexes
CREATE UNIQUE INDEX IX_ROLES_NORMALIZED_NAME ON ROLES(NORMALIZED_NAME);
CREATE INDEX IX_ROLES_CODE ON ROLES(CODE);

-- ================================================
-- USER_ROLES
-- ================================================
-- Maps users to roles
CREATE TABLE USER_ROLES (
    USER_ID               VARCHAR2(256 CHAR) NOT NULL REFERENCES USERS(ID),
    ROLE_ID               NUMBER(19,0) NOT NULL REFERENCES ROLES(ID),
    CREATED_AT            TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY (USER_ID, ROLE_ID)
);

-- Indexes
CREATE INDEX IX_USER_ROLES_USER_ID ON USER_ROLES(USER_ID);
CREATE INDEX IX_USER_ROLES_ROLE_ID ON USER_ROLES(ROLE_ID);

-- ================================================
-- ROLE_CLAIMS
-- ================================================
-- Stores permissions for roles
CREATE TABLE ROLE_CLAIMS (
    ID                    NUMBER(19,0) GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    ROLE_ID               NUMBER(19,0) NOT NULL REFERENCES ROLES(ID),
    CLAIM_TYPE            VARCHAR2(100 CHAR) NOT NULL,
    CLAIM_VALUE           VARCHAR2(100 CHAR),
    DESCRIPTION           VARCHAR2(1000 CHAR),
    IS_ACTIVE             CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y', 'N')),
    CREATED_AT            TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Indexes
CREATE INDEX IX_ROLE_CLAIMS_ROLE_ID ON ROLE_CLAIMS(ROLE_ID);
CREATE INDEX IX_ROLE_CLAIMS_CLAIM_TYPE ON ROLE_CLAIMS(CLAIM_TYPE);

-- ================================================
-- SERVICE_ACCOUNTS
-- ================================================
-- Stores service account information
CREATE TABLE SERVICE_ACCOUNTS (
    ID                    VARCHAR2(256 CHAR) NOT NULL PRIMARY KEY,
    NAME                  VARCHAR2(100 CHAR) NOT NULL UNIQUE,
    DESCRIPTION           VARCHAR2(1000 CHAR),
    API_KEY_HASH          VARCHAR2(256 CHAR),
    IS_ACTIVE             CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y', 'N')),
    CREATED_AT            TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    LAST_USED             TIMESTAMP,
    ROLE_ID               NUMBER(19,0) REFERENCES ROLES(ID)
);

-- Indexes
CREATE INDEX IX_SERVICE_ACCOUNTS_NAME ON SERVICE_ACCOUNTS(NAME);
CREATE INDEX IX_SERVICE_ACCOUNTS_ROLE_ID ON SERVICE_ACCOUNTS(ROLE_ID);

-- ================================================
-- USER_REQUESTS
-- ================================================
-- Stores user change requests for Maker-Checker
CREATE TABLE USER_REQUESTS (
    ID                    NUMBER(19,0) GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    ENTITY_ID             VARCHAR2(256 CHAR) REFERENCES USERS(ID),
    ACTION                VARCHAR2(20 CHAR) NOT NULL CHECK (ACTION IN ('CREATE', 'UPDATE', 'DELETE', 'LOCK', 'UNLOCK')),
    STATUS                VARCHAR2(10 CHAR) DEFAULT 'PENDING' NOT NULL CHECK (STATUS IN ('PENDING', 'APPROVED', 'REJECTED')),
    REQUESTED_DATA        CLOB NOT NULL,
    COMMENTS              NVARCHAR2(500),
    MAKER_ID              VARCHAR2(256 CHAR) NOT NULL REFERENCES USERS(ID),
    REQUESTED_DATE        TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CHECKER_ID            VARCHAR2(256 CHAR) REFERENCES USERS(ID),
    APPROVE_DATE          TIMESTAMP
);

-- Indexes
CREATE INDEX IX_USER_REQUESTS_ENTITY_ID ON USER_REQUESTS(ENTITY_ID);
CREATE INDEX IX_USER_REQUESTS_STATUS ON USER_REQUESTS(STATUS);
CREATE INDEX IX_USER_REQUESTS_MAKER_ID ON USER_REQUESTS(MAKER_ID);
CREATE INDEX IX_USER_REQUESTS_CHECKER_ID ON USER_REQUESTS(CHECKER_ID);

-- ================================================
-- ROLE_REQUESTS
-- ================================================
-- Stores role change requests for Maker-Checker
CREATE TABLE ROLE_REQUESTS (
    ID                    NUMBER(19,0) GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    ENTITY_ID             NUMBER(19,0) REFERENCES ROLES(ID),
    ACTION                VARCHAR2(20 CHAR) NOT NULL CHECK (ACTION IN ('CREATE', 'UPDATE', 'DELETE')),
    STATUS                VARCHAR2(10 CHAR) DEFAULT 'PENDING' NOT NULL CHECK (STATUS IN ('PENDING', 'APPROVED', 'REJECTED')),
    REQUESTED_DATA        CLOB NOT NULL,
    COMMENTS              NVARCHAR2(500),
    MAKER_ID              VARCHAR2(256 CHAR) NOT NULL REFERENCES USERS(ID),
    REQUESTED_DATE        TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CHECKER_ID            VARCHAR2(256 CHAR) REFERENCES USERS(ID),
    APPROVE_DATE          TIMESTAMP
);

-- Indexes
CREATE INDEX IX_ROLE_REQUESTS_ENTITY_ID ON ROLE_REQUESTS(ENTITY_ID);
CREATE INDEX IX_ROLE_REQUESTS_STATUS ON ROLE_REQUESTS(STATUS);
CREATE INDEX IX_ROLE_REQUESTS_MAKER_ID ON ROLE_REQUESTS(MAKER_ID);
CREATE INDEX IX_ROLE_REQUESTS_CHECKER_ID ON ROLE_REQUESTS(CHECKER_ID);

-- ================================================
-- ACTIVITY_LOGS
-- ================================================
-- Stores activity logs for auditing
CREATE TABLE ACTIVITY_LOGS (
    ID                    NUMBER(19,0) GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    USER_ID               VARCHAR2(256 CHAR),
    USER_TYPE             VARCHAR2(20 CHAR) NOT NULL CHECK (USER_TYPE IN ('ADMIN', 'SERVICE_ACCOUNT')),
    ACTION                VARCHAR2(100 CHAR) NOT NULL,
    IP_ADDRESS            VARCHAR2(45 CHAR),
    DEVICE_INFO           VARCHAR2(500 CHAR),
    DETAILS               CLOB,
    CREATED_AT            TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Indexes
CREATE INDEX IX_ACTIVITY_LOGS_USER_ID ON ACTIVITY_LOGS(USER_ID);
CREATE INDEX IX_ACTIVITY_LOGS_USER_TYPE ON ACTIVITY_LOGS(USER_TYPE);
CREATE INDEX IX_ACTIVITY_LOGS_CREATED_AT ON ACTIVITY_LOGS(CREATED_AT);
